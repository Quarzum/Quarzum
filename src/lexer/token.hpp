#pragma once

enum TokenType {
    Identifier = 0,
    Integer,
    Number,
    String,
    Char,
    Bool,
    Var,
    Uint,
    Byte,
    Return,
    Function,
    Enum,
    Const,
    Exit,
    Out,
    Input,
    Struct,
    If,
    Else,
    For,
    Foreach,
    In,
    While,
    Do,
    Switch,
    Case,
    Break,
    Continue,
    Repeat,
    Try,
    Catch,
    Finally,
    Throw,
    Module,
    Import,
    Class,
    Public,
    Private,
    Short,
    Long,
    Constuctor,
    Destructor,
    Async,
    Await,
    True,
    False,
    Equal,
    LeftPar,
    RigthPar,
    BitwiseNot,
    BitwiseAnd,
    BitwiseOr,
    BitwiseXor,
    Not,
    And,
    Or,
    Point,
    Comma,
    Plus,
    Minus,
    Product,
    Division,
    Power,
    Remainder,
    IntDivision,
    LeftCurlyBracket,
    RightCurlyBracket,
    LeftSquareBracket,
    RightSquareBracket,
    Semicolon,
    Greater,
    Lower,
    IsEqual,
    GreaterEq,
    LowerEq,
    PlusEq,
    PlusUnary,
    MinusEq,
    MinusUnary,
    ProdEq,
    DivEq,
    RemEq,
    PowEq,
    IntDivEq,
    NotEqual,
    Endl,
    IntegerLit,
    NumberLit,
    StringLit,
    CharLit,
    ByteLit,
    UintLit,
    Error
};

struct Token {
    TokenType type;
    string value;
};